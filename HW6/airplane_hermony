#include <iostream>
#include <fstream>
using namespace std;

float getfrequency1(const string& note) {
    float f1;
    if (note == "G") f1 = 196.00;
    else if (note == "A") f1 = 220.00;
    else if (note == "B") f1 = 246.94;
    else if (note == "C") f1 = 261.63;
    else if (note == "D") f1 = 293.66;
    else if (note == "E") f1 = 329.63;
    else if (note == "F") f1 = 349.23;
    else return -1;
    return f1;
}
float getfrequency2(const string& note) {
    float f2;
    if (note == "G") f2 = 196.00;
    else if (note == "A") f2 = 220.00;
    else if (note == "B") f2 = 246.94;
    else if (note == "C") f2 = 261.63;
    else if (note == "D") f2 = 293.66;
    else if (note == "E") f2 = 329.63;
    else if (note == "F") f2 = 349.23;
    else return -1;
    return f2;
}

int getAmplitude(int strength) {
    float a;
    if (strength == 1) a = 1000;
    else if (strength == 2) a = 2000;
    else if (strength == 3) a = 3000;
    else if (strength == 4) a = 4000;
    else if (strength == 5) a = 5000;
    else if (strength == 6) a = 6000;
    else if (strength == 7) a = 7000;
    else if (strength == 8) a = 8000;
    else if (strength == 9) a = 9000;
    else if (strength == 10) a = 10000;
    else return -1;
    return a;
}
float getLength(int eumpyo) {
    float T;
    if (eumpyo == 2) T = 2.0;
    else if (eumpyo == 4) T = 1.0;
    else if (eumpyo == 8) T = 0.5;
    else if (eumpyo == 16) T = 0.25;
    else return -1;
    return T;
}

int main() {
    ifstream xx("Beatles-LetItBe-wav_30s.wav", ios::binary | ios::in);
    if (!xx) return 999;
    char header[44];
    xx.read(header, 44);
    xx.close();
    //[sprint1]_read header 44 byte

    short* n;   n = (short*)(header + 22);  cout << "number of channels = " << *n << endl; // number of Channels
    int* fs;   fs = (int*)(header + 24);  cout << "sampleRate = " << *fs << endl; // sampleRate
    int* b;   b = (int*)(header + 28);  cout << "byteRate = " << *b << endl;  //  byteRate   
    *n = 2;  // stereo
    int N = fs[0] * 10; // number of samples for 10 sec
    short* data;
    data = new short[N]; // allocate memory 
    //[sprint2]_use Beatles.wav

    const float pi = 3.141592;
    float dt = 1. / fs[0];
    ofstream yy("airplane_harmonic.wav", ios::binary | ios::out);
    if (!yy) return 666;
    yy.write(header, 100 * sizeof(char)); // use header of Beatles.wav
    ifstream zz("note_airplane_harmonic.txt");
    float t = 0;
    int f1, f2, a, T, tt, ss; // set variables
    string hh1, hh2;
    int k;
    zz >> k;
    for (int i = 0; i < k; i++) {
        zz >> tt >> hh1 >> ss >> hh2;
        f1 = getfrequency1(hh1);
        f2 = getfrequency1(hh2);
        a = getAmplitude(ss);
        T = getLength(tt);
        for (int j = 0; j < fs[0]; j++, t += dt) {
            data[j] = (short)(a * sin(2.0 * pi * f1 * t) + a * sin(2.0 * pi * f2 * t));   // a=amplitude, f=freq, N=number of Samples
        }
        yy.write((char*)data, fs[0] * sizeof(short));    // write 1 sec
    }
    yy.close();
    return 1;
}
